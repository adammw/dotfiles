if [ -f ~/.aliases ]; then
    source ~/.aliases
fi

# Reload helper
reload_passenger() {
  git rev-parse > /dev/null 2>&1
  if [[ $? -eq 0 && -d "$(git rev-parse --show-toplevel)/tmp" ]]; then
    touch "$(git rev-parse --show-toplevel)/tmp/restart.txt"
  else
    echo "Not a passenger git repository"
  fi
}

# Service helper
service() {
  case $1 in
    status*)
      PID=$(sudo launchctl list | grep -E "$2\$" | cut -f 1)
      if [[ $PID == "-" ]]; then
        echo 'Stopped'
      else
        echo -e "Running\t\tPID: $PID"
      fi
      ;;
    start*)
      sudo launchctl start $2
      ;;
    stop*)
      sudo launchctl stop $2
      ;;
    restart*)
      sudo launchctl stop $2
      sudo launchctl start $2
      ;;
    *)
      echo $"Usage: $0 {start|stop|restart|status}"
  esac
}

# PR
pr_branches() {
  REPO=$(echo $1 | cut -d / -f 1)
  PR_NUMBER=$(echo $1 | cut -d / -f 2)
  SHA=$(curl --silent -n "$HOME/.netrc" "https://api.github.com/repos/zendesk/$REPO/pulls/$PR_NUMBER" | json head.sha)
  pushd "$ZENDESK_ROOT/$REPO" >/dev/null
  echo "$SHA is in:"
  git branch --contains $SHA
  popd >/dev/null
}

if [[ -f "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" ]]; then
  export GOOGLE_CHROME_BIN='/Applications/Google Chrome.app/Contents/MacOS/Google Chrome'
  new_chrome_session() {
    "$GOOGLE_CHROME_BIN" --no-first-run --user-data-dir="$(mktemp -d)" "$@" >/dev/null 2>&1 &
    disown >/dev/null 2>&1
  }
fi

export -f "reload_passenger"
alias reload!='reload_passenger'
